TypesDB "./src/types.db"
PluginDir "./.libs"
BaseDir "./.libs"

FQDNLookup   true

Interval 30
Timeout 2
ReadThreads 5
WriteQueueLimitHigh 500000
WriteQueueLimitLow  400000
CollectInternalStats true

LoadPlugin logfile
<Plugin "logfile">
  File "stderr"
</Plugin>

LoadPlugin write_prometheus
<Plugin write_prometheus>
  Port "9103"
</Plugin>


LoadPlugin write_scribe
<Plugin "write_scribe">
  ConfigFile "../collectd-scribe.conf"
  <File "/home/jake/workspace/apollo/logs/debug.log">
        Instance "debug.log"
        Interval 1
  </File>
    <File "/home/jake/workspace/apollo/logs/gc.log.0.current">
        Instance "gc.log"
        Interval 10
  </File>

  SocketFile "/tmp/collectd-insights.sock"
  SocketGroup "jake"
  SocketPerms "0770"
  DeleteSocket "true"
</Plugin>

#LoadPlugin docker
LoadPlugin df
<Plugin "df">
  FSType "devfs"
  IgnoreSelected true
  ReportByDevice true
  ValuesPercentage true
</Plugin>

LoadPlugin cpu
<Plugin "cpu">
  ValuesPercentage true
  ReportByCpu true
</Plugin>
LoadPlugin swap
<Plugin "swap">
  ValuesPercentage true
</Plugin>
LoadPlugin interface
LoadPlugin disk
LoadPlugin load
LoadPlugin memory
<Plugin "memory">
  ValuesPercentage true
</Plugin>
LoadPlugin processes
LoadPlugin tcpconns

<Plugin "processes">
  ProcessMatch "all" ".*"
</Plugin>

<Plugin "disk">
  # No config - collectd fails parsing configuration if tag is empty.
</Plugin>

<Plugin "tcpconns">
  AllPortsSummary true
</Plugin>

LoadPlugin aggregation
LoadPlugin "match_regex"
<Plugin "memory">
  ValuesPercentage true
</Plugin>

LoadPlugin match_regex
LoadPlugin target_set
LoadPlugin target_replace

PreCacheChain "PreCache"
# Following is a NEW filter chain, just for your metric.
# It is only executed if the default chain "jumps" here.
<Chain "PreCache">

  # The following rule does all the work for your metric:
  <Rule "rewrite_curl_json_my_special_metric">
    # Do a careful match for just your metrics; if it fails, drop down
    # to the next rule:
    <Match regex>
      Plugin "^cpu$"                   # Match on plugin.
    </Match>

    <Target "set">
      MetaData "cpuNum" "%{plugin_instance}"
    </Target>
  </Rule>

  # The following rule is run after rewriting your metric, or
  # if the metric wasn't one of your custom metrics. The rule returns to
  # the default "PreCache" chain. The default processing
  # will write all metrics to Stackdriver Monitoring,
  # which will drop any unrecognized metrics: ones that are not
  # in the list of curated metrics and do not have
  # the custom metric metadata.
  #<Rule "go_back">
  #  Target "return"
  #</Rule>
</Chain>


